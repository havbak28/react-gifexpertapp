{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifexpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifexpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACnBF,EAAeE,EAAEQ,OAAOF,a,+BCRvBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0DAC4CC,UAAUH,GADtD,sDAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACjC,OACI,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAMf,EACNgB,IAAON,IAEZ,4BAAKA,QCJJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OATAC,qBAAU,WACNxB,EAASC,GACRwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAGd,CAAEpB,IAEEqB,EDZ0BK,CAAa1B,GAAlCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAEpB,OACI,qCACC,oBAAIJ,UAAU,kCAAd,SAAkDhB,IAChDoB,GAAW,mBAAGJ,UAAU,iCAAb,qBAGV,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADAA,EAAIC,aEfpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,2BAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACX,cAAC,EAAD,CAEA7B,SAAWA,GADJA,Y,MChB/B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.57521b81.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n   \r\n    const handleInputChange = (e) => {\r\n            setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n   \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=JkedIXOpy2tiw53OhpnInuKaTF00OHko`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img  => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url } ) => {\r\n    return (\r\n        <div className=\"card animate_animated animate_fadeIn\">\r\n            <img src={ url } \r\n                 alt= { title }\r\n            />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n   const { data:images, loading } =  useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n         <h3 className=\"animate_animated animate_fadeIn\">{ category }</h3>\r\n         { loading && <p className=\"animate_animated animate_flash\">Loading</p>}\r\n        \r\n        {\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( ( img ) => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img}  \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        })\r\n        );\r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GifexpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Caballeros del Zodiaco']);\r\n    \r\n    const handleAdd = () => {\r\n        setCategories( cats => [...cats, 'Remi'] );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifexpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                { \r\n                    categories.map((category, i) => (\r\n                        <GiftGrid \r\n                        key= { category } \r\n                        category={ category }/>\r\n                    ))\r\n                 }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifexpertApp } from './GifexpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifexpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}